/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.kt.smcp.gw.ca.avro;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ActionTask extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ActionTask\",\"namespace\":\"com.kt.smcp.gw.ca.avro\",\"fields\":[{\"name\":\"actionCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"actionTarget\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"taskResources\",\"type\":{\"type\":\"map\",\"values\":[\"int\",\"long\",\"float\",\"double\",{\"type\":\"string\",\"avro.java.string\":\"String\"},\"boolean\"],\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String actionCode;
  @Deprecated public java.lang.String actionTarget;
  @Deprecated public java.util.Map<java.lang.String,java.lang.Object> taskResources;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ActionTask() {}

  /**
   * All-args constructor.
   */
  public ActionTask(java.lang.String actionCode, java.lang.String actionTarget, java.util.Map<java.lang.String,java.lang.Object> taskResources) {
    this.actionCode = actionCode;
    this.actionTarget = actionTarget;
    this.taskResources = taskResources;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return actionCode;
    case 1: return actionTarget;
    case 2: return taskResources;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: actionCode = (java.lang.String)value$; break;
    case 1: actionTarget = (java.lang.String)value$; break;
    case 2: taskResources = (java.util.Map<java.lang.String,java.lang.Object>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'actionCode' field.
   */
  public java.lang.String getActionCode() {
    return actionCode;
  }

  /**
   * Sets the value of the 'actionCode' field.
   * @param value the value to set.
   */
  public void setActionCode(java.lang.String value) {
    this.actionCode = value;
  }

  /**
   * Gets the value of the 'actionTarget' field.
   */
  public java.lang.String getActionTarget() {
    return actionTarget;
  }

  /**
   * Sets the value of the 'actionTarget' field.
   * @param value the value to set.
   */
  public void setActionTarget(java.lang.String value) {
    this.actionTarget = value;
  }

  /**
   * Gets the value of the 'taskResources' field.
   */
  public java.util.Map<java.lang.String,java.lang.Object> getTaskResources() {
    return taskResources;
  }

  /**
   * Sets the value of the 'taskResources' field.
   * @param value the value to set.
   */
  public void setTaskResources(java.util.Map<java.lang.String,java.lang.Object> value) {
    this.taskResources = value;
  }

  /** Creates a new ActionTask RecordBuilder */
  public static com.kt.smcp.gw.ca.avro.ActionTask.Builder newBuilder() {
    return new com.kt.smcp.gw.ca.avro.ActionTask.Builder();
  }

  /** Creates a new ActionTask RecordBuilder by copying an existing Builder */
  public static com.kt.smcp.gw.ca.avro.ActionTask.Builder newBuilder(com.kt.smcp.gw.ca.avro.ActionTask.Builder other) {
    return new com.kt.smcp.gw.ca.avro.ActionTask.Builder(other);
  }

  /** Creates a new ActionTask RecordBuilder by copying an existing ActionTask instance */
  public static com.kt.smcp.gw.ca.avro.ActionTask.Builder newBuilder(com.kt.smcp.gw.ca.avro.ActionTask other) {
    return new com.kt.smcp.gw.ca.avro.ActionTask.Builder(other);
  }

  /**
   * RecordBuilder for ActionTask instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ActionTask>
    implements org.apache.avro.data.RecordBuilder<ActionTask> {

    private java.lang.String actionCode;
    private java.lang.String actionTarget;
    private java.util.Map<java.lang.String,java.lang.Object> taskResources;

    /** Creates a new Builder */
    private Builder() {
      super(com.kt.smcp.gw.ca.avro.ActionTask.SCHEMA$);
    }

    /** Creates a Builder by copying an existing Builder */
    private Builder(com.kt.smcp.gw.ca.avro.ActionTask.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.actionCode)) {
        this.actionCode = data().deepCopy(fields()[0].schema(), other.actionCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.actionTarget)) {
        this.actionTarget = data().deepCopy(fields()[1].schema(), other.actionTarget);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.taskResources)) {
        this.taskResources = data().deepCopy(fields()[2].schema(), other.taskResources);
        fieldSetFlags()[2] = true;
      }
    }

    /** Creates a Builder by copying an existing ActionTask instance */
    private Builder(com.kt.smcp.gw.ca.avro.ActionTask other) {
            super(com.kt.smcp.gw.ca.avro.ActionTask.SCHEMA$);
      if (isValidValue(fields()[0], other.actionCode)) {
        this.actionCode = data().deepCopy(fields()[0].schema(), other.actionCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.actionTarget)) {
        this.actionTarget = data().deepCopy(fields()[1].schema(), other.actionTarget);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.taskResources)) {
        this.taskResources = data().deepCopy(fields()[2].schema(), other.taskResources);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'actionCode' field */
    public java.lang.String getActionCode() {
      return actionCode;
    }

    /** Sets the value of the 'actionCode' field */
    public com.kt.smcp.gw.ca.avro.ActionTask.Builder setActionCode(java.lang.String value) {
      validate(fields()[0], value);
      this.actionCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /** Checks whether the 'actionCode' field has been set */
    public boolean hasActionCode() {
      return fieldSetFlags()[0];
    }

    /** Clears the value of the 'actionCode' field */
    public com.kt.smcp.gw.ca.avro.ActionTask.Builder clearActionCode() {
      actionCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'actionTarget' field */
    public java.lang.String getActionTarget() {
      return actionTarget;
    }

    /** Sets the value of the 'actionTarget' field */
    public com.kt.smcp.gw.ca.avro.ActionTask.Builder setActionTarget(java.lang.String value) {
      validate(fields()[1], value);
      this.actionTarget = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /** Checks whether the 'actionTarget' field has been set */
    public boolean hasActionTarget() {
      return fieldSetFlags()[1];
    }

    /** Clears the value of the 'actionTarget' field */
    public com.kt.smcp.gw.ca.avro.ActionTask.Builder clearActionTarget() {
      actionTarget = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'taskResources' field */
    public java.util.Map<java.lang.String,java.lang.Object> getTaskResources() {
      return taskResources;
    }

    /** Sets the value of the 'taskResources' field */
    public com.kt.smcp.gw.ca.avro.ActionTask.Builder setTaskResources(java.util.Map<java.lang.String,java.lang.Object> value) {
      validate(fields()[2], value);
      this.taskResources = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /** Checks whether the 'taskResources' field has been set */
    public boolean hasTaskResources() {
      return fieldSetFlags()[2];
    }

    /** Clears the value of the 'taskResources' field */
    public com.kt.smcp.gw.ca.avro.ActionTask.Builder clearTaskResources() {
      taskResources = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public ActionTask build() {
      try {
        ActionTask record = new ActionTask();
        record.actionCode = fieldSetFlags()[0] ? this.actionCode : (java.lang.String) defaultValue(fields()[0]);
        record.actionTarget = fieldSetFlags()[1] ? this.actionTarget : (java.lang.String) defaultValue(fields()[1]);
        record.taskResources = fieldSetFlags()[2] ? this.taskResources : (java.util.Map<java.lang.String,java.lang.Object>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
