<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/jdbc
    					http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
        				http://www.springframework.org/schema/beans 
        				http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        				http://www.springframework.org/schema/util 
        				http://www.springframework.org/schema/util/spring-util-3.2.xsd
        				http://www.springframework.org/schema/context 
        				http://www.springframework.org/schema/context/spring-context-3.2.xsd">
        				
	<!-- properties
	<context:property-placeholder location="classpath:app.${spring.profiles.active}.properties"/>      
	 -->
	<context:property-placeholder location="classpath:app.${hiot.run.env:dev}.properties"/>  				
        				
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc.testOnReturn}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
	</bean>  	
	
	<!-- mapper scan -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.kt.giga.home.cms.*.dao" />
	</bean>	        				

	<beans profile="kth">
		<bean id="sqlSessionFactory" class="com.kt.giga.home.cms.util.RefreshableSSFBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="/WEB-INF/config/database-config.xml" />
	 		<property name="typeAliasesPackage" value="com.kt.giga.home.cms" />
	 		<property name="mapperLocations" value="/WEB-INF/database/**/*.xml" /> 
		</bean>		
	</beans>
	
	<beans profile="dev">
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="/WEB-INF/config/database-config.xml" />
	 		<property name="typeAliasesPackage" value="com.kt.giga.home.cms" />
	 		<property name="mapperLocations" value="/WEB-INF/database/**/*.xml" /> 
		</bean>		
	</beans>
	
	<beans profile="svc">
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="/WEB-INF/config/database-config.xml" />
	 		<property name="typeAliasesPackage" value="com.kt.giga.home.cms" />
	 		<property name="mapperLocations" value="/WEB-INF/database/**/*.xml" /> 
		</bean>			
	</beans>		 
        				
</beans>        				